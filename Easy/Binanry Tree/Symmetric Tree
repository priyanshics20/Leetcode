/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        return symmetric(root,root);
    }

    private boolean symmetric(TreeNode node1 , TreeNode node2){
            if(node1==null && node2==null)
                return true;
            // if(node1==null || node2==null)
            //     return false;
            if(node1==null && node2!=null)
                return false;
            if(node1!=null && node2==null)
                return false;
            if(node1.val !=node2.val)
                return false;
            boolean left = symmetric(node1.left , node2.right);
            boolean right = symmetric(node1.right , node2.left);
            return left && right;

            //two tree exactly same - change krenge sirf left ka left se check or right ka right se
//            boolean left = symmetric(node1.left , node2.right);
//            boolean right = symmetric(node1.left , node2.right);

        }
}
