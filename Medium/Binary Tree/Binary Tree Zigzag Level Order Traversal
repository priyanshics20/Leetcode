/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        Queue<TreeNode> qu = new LinkedList<>();
        if(root == null)
            return ans;
        
        qu.add(root);
        int idx=0;
        while(!qu.isEmpty()){
            int size = qu.size();
            ArrayList<Integer> al = new ArrayList<>();
            for(int i=0;i<size;i++){
            
                if(qu.peek().left!=null){
                    qu.add(qu.peek().left);
                }
                if(qu.peek().right!=null){
                    qu.add(qu.peek().right);
                }
                al.add(qu.poll().val);
               
            }
            if(idx%2==0){
                ans.add(al);
            }else{
                Collections.reverse(al);
                ans.add(al);
            }
            idx++;
        }
        return ans;
    }
}
