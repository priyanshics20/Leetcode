/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        Stack<Integer> st = new Stack<>();
        ListNode temp = head;
        ListNode temp2 = head;
        int c=1;
        while(temp!=null){
            if(c>=left && c<=right ){
                st.add(temp.val);
            }
            temp=temp.next;
            c++;
        }
        c=1;
        while(c<left){
            temp2=temp2.next;
            c++;
        }
        while(!st.isEmpty()){
            temp2.val = st.pop();
            temp2=temp2.next;
        }

        return head;

    }
}
